/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

/**
 *
 * @author ASUS ZENBOOK
 */
public class VOrderDetails extends javax.swing.JFrame {

    /**
     * Creates new form VOrderDetails
     */
    public VOrderDetails() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        ExitBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        date = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        ordersTable = new javax.swing.JTable();
        updateBtn = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();
        AddBtn = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        searchBtn = new javax.swing.JButton();
        SearchByTheOrderID = new javax.swing.JTextField();
        ClearBtn = new javax.swing.JButton();
        LogoutBtn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        netAmt = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        cust_id = new javax.swing.JComboBox<>();
        jboxmid = new javax.swing.JComboBox<>();
        medID1 = new javax.swing.JLabel();
        medName = new javax.swing.JTextField();
        medID4 = new javax.swing.JLabel();
        qty1 = new javax.swing.JTextField();
        medID9 = new javax.swing.JLabel();
        unitPrice = new javax.swing.JTextField();
        medID10 = new javax.swing.JLabel();
        jTFUprice = new javax.swing.JTextField();
        AddBtn1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        customerName = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        OnOrders = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        BackBtn1 = new javax.swing.JButton();
        BackBtn2 = new javax.swing.JButton();
        BackBtn3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 102));
        jPanel1.setPreferredSize(new java.awt.Dimension(1479, 800));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(1250, 800));

        ExitBtn.setBackground(new java.awt.Color(0, 153, 102));
        ExitBtn.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        ExitBtn.setText("x");
        ExitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitBtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 102));
        jLabel3.setText(" Order Management");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Order Date:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Net Amount");

        ordersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Order ID", "Customer ID", "Customer Name", "Net Amount", "Order Date", "Order Status"
            }
        ));
        ordersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ordersTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ordersTable);

        updateBtn.setBackground(new java.awt.Color(102, 204, 0));
        updateBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        DeleteBtn.setBackground(new java.awt.Color(102, 204, 0));
        DeleteBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        DeleteBtn.setText("Delete");
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });

        AddBtn.setBackground(new java.awt.Color(102, 204, 0));
        AddBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        AddBtn.setText("Add Medicine To Cart");
        AddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBtnActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        jLabel9.setText("Order List");

        searchBtn.setBackground(new java.awt.Color(102, 204, 0));
        searchBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        SearchByTheOrderID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SearchByTheOrderIDKeyPressed(evt);
            }
        });

        ClearBtn.setBackground(new java.awt.Color(102, 204, 0));
        ClearBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ClearBtn.setText("Clear");
        ClearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearBtnActionPerformed(evt);
            }
        });

        LogoutBtn.setBackground(new java.awt.Color(51, 204, 0));
        LogoutBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        LogoutBtn.setText("Logout");
        LogoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutBtnActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Customer ID:");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Medicine ID:");

        netAmt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                netAmtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                netAmtKeyReleased(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Order ID:");

        id.setEditable(false);

        cust_id.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "000", "001", "002" }));
        cust_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cust_idActionPerformed(evt);
            }
        });

        jboxmid.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "000", "001", "002", " " }));
        jboxmid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jboxmidActionPerformed(evt);
            }
        });

        medID1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        medID1.setText("Medicine Name");

        medID4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        medID4.setText("Quantity");

        qty1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qty1ActionPerformed(evt);
            }
        });

        medID9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        medID9.setText("Unit Price");

        unitPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitPriceActionPerformed(evt);
            }
        });

        medID10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        medID10.setText("Total Amount");

        jTFUprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFUpriceActionPerformed(evt);
            }
        });

        AddBtn1.setBackground(new java.awt.Color(102, 204, 0));
        AddBtn1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        AddBtn1.setText("Add");
        AddBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBtn1ActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("Customer Name");
        jLabel12.setToolTipText("");

        customerName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                customerNameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                customerNameKeyReleased(evt);
            }
        });

        OnOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Medicine ID", "Medicine Name", "Quantity", "Unit Price", "Total Amount"
            }
        ));
        jScrollPane2.setViewportView(OnOrders);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(302, 302, 302)
                .addComponent(LogoutBtn)
                .addGap(18, 18, 18)
                .addComponent(ExitBtn)
                .addGap(51, 51, 51))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(99, 99, 99)
                                .addComponent(AddBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(150, 150, 150)
                                .addComponent(updateBtn)
                                .addGap(164, 164, 164)
                                .addComponent(DeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(185, 185, 185)
                                .addComponent(ClearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(SearchByTheOrderID, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(searchBtn))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(267, 267, 267)
                                        .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(60, 60, 60)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                                    .addComponent(medID10)
                                                    .addGap(24, 24, 24)
                                                    .addComponent(jTFUprice))
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                                    .addComponent(medID9)
                                                    .addGap(52, 52, 52)
                                                    .addComponent(unitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                                        .addComponent(jLabel10)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jboxmid, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                                        .addComponent(medID1)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(medName, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                                        .addComponent(medID4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(45, 45, 45)
                                                        .addComponent(qty1)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(AddBtn))))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(78, 78, 78)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel11)
                                                .addGap(74, 74, 74))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel12)
                                                    .addComponent(jLabel8)
                                                    .addComponent(jLabel7)
                                                    .addComponent(jLabel5))
                                                .addGap(29, 29, 29)))
                                        .addGap(51, 51, 51)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(customerName, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cust_id, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(netAmt, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1194, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(517, 517, 517)
                        .addComponent(jLabel9)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LogoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ExitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)))
                    .addComponent(jboxmid, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addGap(17, 17, 17)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(medID9)
                            .addComponent(unitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(medID10)
                            .addComponent(jTFUprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel5)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cust_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(medID1)
                                .addComponent(medName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(qty1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AddBtn))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(medID4)
                                    .addComponent(customerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(netAmt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7))
                            .addGap(18, 18, 18)
                            .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddBtn1)
                    .addComponent(updateBtn)
                    .addComponent(DeleteBtn)
                    .addComponent(ClearBtn))
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addGap(13, 13, 13)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchByTheOrderID, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("MediCare Pharmaceuticals");

        backBtn.setBackground(new java.awt.Color(51, 204, 0));
        backBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        BackBtn1.setBackground(new java.awt.Color(102, 204, 0));
        BackBtn1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BackBtn1.setText("Re Order");
        BackBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtn1ActionPerformed(evt);
            }
        });

        BackBtn2.setBackground(new java.awt.Color(102, 204, 0));
        BackBtn2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BackBtn2.setText("Demo");
        BackBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtn2ActionPerformed(evt);
            }
        });

        BackBtn3.setBackground(new java.awt.Color(102, 204, 0));
        BackBtn3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BackBtn3.setText("Order Status");
        BackBtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtn3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabel2)))
                        .addGap(5, 5, 5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(BackBtn2)
                                    .addComponent(backBtn)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(BackBtn3)
                                    .addComponent(BackBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1257, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(backBtn)
                .addGap(18, 18, 18)
                .addComponent(BackBtn2)
                .addGap(75, 75, 75)
                .addComponent(BackBtn1)
                .addGap(18, 18, 18)
                .addComponent(BackBtn3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1182, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1497, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1182, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitBtnActionPerformed
        //Exit Button
        System.exit(0);
    }//GEN-LAST:event_ExitBtnActionPerformed

    private void ordersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ordersTableMouseClicked
        //Get the index of the selected row
        int selectedRow = ordersTable.getSelectedRow();

        //Establish the table model that represents the structure & data of the table
        TableModel model = ordersTable.getModel();

        //Validationa to ensure that User interacts with the selected row data
        //Set the Order ID,Medicine ID,Customer ID,Quantity,Total Amount & Order Date text fields to the value from the selected row

        //        cust_id.setSelectedItem(model.getValueAt(selectedRow, 1).toString());
        //        med_ID.setText(model.getValueAt(selectedRow, 2).toString());
        //        netAmt.setText(model.getValueAt(selectedRow, 3).toString());
        //        totalAmt.setText(model.getValueAt(selectedRow, 4).toString());

        //Retrieve the data from the First Column(index 0)of the selected row & store it in OrderID
        id.setText(model.getValueAt(selectedRow, 0).toString());

        //Set the Date Format
        SimpleDateFormat sfd = new SimpleDateFormat("yyyy-MM-dd");
        String orderDate = (String) model.getValueAt(selectedRow, 5);

        try
        {
            //Handle the parsing of the Order Date
            Date orderingDate = sfd.parse(orderDate);
            date.setDate(orderingDate);
        }
        catch (ParseException e)
        {
            // Handle the parsing exception,by displaying an error message.
            e.printStackTrace();
        }
    }//GEN-LAST:event_ordersTableMouseClicked

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // Update Button
        try
        {
            String orderingDate;
            int quantity,medID,custID;
            double totalAmount;

            //User input validation
            //            medID = Integer.parseInt(med_ID.getText());

            // Get customer ID from the combo box
            String selectedItem = (String) cust_id.getSelectedItem();
            String parts[] = selectedItem.split(" - ");
            custID = Integer.parseInt(parts[0]);

            quantity = Integer.parseInt(netAmt.getText());
            //            totalAmount = Double.parseDouble(totalAmt.getText());

            //Validating the date formatting
            SimpleDateFormat sfd = new SimpleDateFormat("yyyy-MM-dd");
            orderingDate = sfd.format(date.getDate());

            //Validations of Database Interaction
            try
            {
                Statement st = pharmacy.DBconnection.createDBconnection().createStatement();
                int x = Integer.parseInt(id.getText());

                //Validations related to SQL
                String query = "UPDATE `orders` SET `med_ID` = ? , `cust_ID` = ? , `qty` = ? ,`totalAmt` = ? , `orderDate` = ? WHERE `OrderID` = ?";

                // Use PreparedStatement to avoid SQL injection
                java.sql.PreparedStatement prepSt = st.getConnection().prepareStatement(query);

                //                prepSt.setInt(1, medID);
                prepSt.setInt(2,custID );
                prepSt.setInt(3, quantity);
                //                prepSt.setDouble(4, totalAmount);

                // Assuming Order Date is a LocalDate
                prepSt.setString(5, orderingDate);
                prepSt.setInt(6, x);

                int count = prepSt.executeUpdate();

                if (count > 0)
                {
                    JOptionPane.showMessageDialog(null, "Selected Order Details Updated Successfully", "Success",JOptionPane.INFORMATION_MESSAGE);

                    // Refresh the medicineTable after updating
                    refreshOrdersTable();
                }
            }
            catch(Exception e)
            {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error occurred while Updating the selected order details", "Error", JOptionPane.ERROR_MESSAGE);
            }

        }
        catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(null, "Invalid Input for Quantity or Total Amount...!", "Error", JOptionPane.ERROR_MESSAGE);
        }
        catch(Exception e)
        {
            //Generic Exception for any kind of exception
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed
        //Delete Button
        try
        {
            Statement st = pharmacy.DBconnection.createDBconnection().createStatement();
            String query = "DELETE FROM `orders` WHERE `OrderID` = " + Integer.parseInt(ordersTable.getValueAt(ordersTable.getSelectedRow(), 0).toString());

            //executeUpdate Method call to execute the DELETE query & returns the No of rows deleted
            int count = st.executeUpdate(query);
            //System.out.println(query);

            //Data Validations
            if (count > 0)
            {
                JOptionPane.showMessageDialog(null, "Selected Order Details deleted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);

                // Refresh the ordersTable after deleting
                refreshOrdersTable();
            }

            //Deselect previous selected rows
            ordersTable.clearSelection();
            refreshOrdersTable();
        }
        catch (Exception e)
        {

        }
    }//GEN-LAST:event_DeleteBtnActionPerformed

    private void AddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBtnActionPerformed

        //my code start

        int oID = Integer.parseInt(id.getText());
        int mID = Integer.parseInt((String) jboxmid.getSelectedItem());
        int cID = Integer.parseInt((String) cust_id.getSelectedItem());
        int qty = Integer.parseInt(qty1.getText());

        Date date = new Date();
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yy");
        String str = formatter.format(date);

        ResultSet rst;
        try
        {
            Connection conn = DBConnection.createDBconnection();
            String sql = "INSERT INTO orders (orderID, med_ID, cust_ID, qty, totalAmt, orderDate) VALUES (?, ?, ?, ?, ?, ?);";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setInt(1, oID);
            pst.setInt(2, mID);
            pst.setInt(3, cID);
            pst.setInt(4, qty);
            pst.setDate(5, (java.sql.Date) date);

            pst.executeUpdate();

            JOptionPane.showMessageDialog(null,"Order Created Successfully", "Success", JOptionPane.INFORMATION_MESSAGE);

        }
        catch(Exception e)
        {
            e.printStackTrace();
        }

        for (int row = 0; row < OnOrders.getRowCount(); row++) {
            int rowHeight = OnOrders.getRowHeight();

            for (int column = 0; column < OnOrders.getColumnCount(); column++) {
                Component comp = OnOrders.prepareRenderer(OnOrders.getCellRenderer(row, column), row, column);
                rowHeight = Math.max(rowHeight, comp.getPreferredSize().height + 12);
            }

            OnOrders.setRowHeight(row, rowHeight);
        }

        //my code end

        //Add Button
        int custID,medID,quantity;
        double totalAmount;
        String orderDate;

        // Get customer ID from the combo box
        String selectedItem = (String) cust_id.getSelectedItem();
        String parts[] = selectedItem.split(" - ");
        custID = Integer.parseInt(parts[0]);

        //User input validation
        //        medID = Integer.parseInt(med_ID.getText());
        quantity = Integer.parseInt(netAmt.getText());
        //        totalAmount = Double.parseDouble(totalAmt.getText());

        //Validating the date formatting
        SimpleDateFormat sfd = new SimpleDateFormat("yyyy-MM-dd");
        orderDate = sfd.format(date.getDate());

        //Validations of Database Interaction
        try
        {
            Statement st = pharmacy.DBconnection.createDBconnection().createStatement();

            //Fetch the next avaialable Order ID from the Database
            ResultSet rs = st.executeQuery("SELECT MAX(OrderID) FROM orders" );
            int nextOrderID = 1;

            if (rs.next())
            {
                nextOrderID =rs.getInt(1) + 1;
            }

            //            int count = st.executeUpdate("INSERT INTO `orders`(`OrderID`, `med_ID`, `cust_ID`, `qty`, `totalAmt` , `orderDate`) VALUES ('" + nextOrderID + "','" + medID + "', '" + custID + "', '" + quantity + "', '" + totalAmount + "','"+orderDate+"')");

            //            if (count > 0)
            //            {
                //                JOptionPane.showMessageDialog(null, "New Order's Details Added Successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                //
                //                // Refresh the customerTable after adding the new customer
                //                refreshOrdersTable();
                //            }
        }
        //Validations of Error Handling
        catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(null, "Invalid Input for Quantity or Total Amount...!","Error",JOptionPane.ERROR_MESSAGE);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Something went wrong...!","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_AddBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        /*
        try
        {
            // Creating the Database connection
            Statement st = DBconnection.createDBconnection().createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM orders WHERE OrderID = '"+SearchByTheOrderID.getText()+"'");

            if(rs.next())
            {
                med_ID.setText(rs.getString("med_ID"));
                cust_id.setText(rs.getString("cust_ID"));
                qty.setText(rs.getString("qty"));
                totalAmt.setText(rs.getString("totalAmt"));

                String orderDate = rs.getString("orderDate");
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

                try
                {
                    Date orderingDate = sdf.parse(orderDate);
                    date.setDate(orderingDate);
                }
                catch (ParseException ex)
                {
                    // Handle the parsing exception
                    ex.printStackTrace();
                }
            }
        }
        catch(Exception e)
        {

        }
        */
    }//GEN-LAST:event_searchBtnActionPerformed

    private void SearchByTheOrderIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchByTheOrderIDKeyPressed
        //Ensures the user enters only the numerical values for the order_id
        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            evt.consume();
            // Consume the event to prevent the character from being entered
            JOptionPane.showMessageDialog(null, "You must enter numerical values for Order ID...!", "Error", JOptionPane.ERROR_MESSAGE);
        }

        super.processKeyEvent(evt);
    }//GEN-LAST:event_SearchByTheOrderIDKeyPressed

    private void ClearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearBtnActionPerformed
        // Clear Button
        id.setText("Will Be Added Automatically");
        //        med_ID.setText("");
        cust_id.setSelectedIndex(-1);
        netAmt.setText("1");
        //        totalAmt.setText("0");
        date.setDate(Date.from(Instant.now()));
    }//GEN-LAST:event_ClearBtnActionPerformed

    private void LogoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutBtnActionPerformed
        //Logout Button
        this.dispose();
        Loginform obj = new Loginform();
        obj.show();
    }//GEN-LAST:event_LogoutBtnActionPerformed

    private void netAmtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_netAmtKeyPressed
        //Ensures that the user enters only the numerical values for quantity
        char c = evt.getKeyChar();
        //Validating the user inputs for the quantity
        if(Character.isLetter(c))
        {
            netAmt.setEditable(false);
            JOptionPane.showMessageDialog(null, "Enter Numerical Values for the Quantity","Error",JOptionPane.ERROR_MESSAGE);
            netAmt.setEditable(true);

        }
    }//GEN-LAST:event_netAmtKeyPressed

    private void netAmtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_netAmtKeyReleased
        calculateTotalAmount();
    }//GEN-LAST:event_netAmtKeyReleased

    private void cust_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cust_idActionPerformed

        // Extract med_ID from the selected combo box item
        String selectedCustomerID = (String) cust_id.getSelectedItem();

        // Check if the selectedCustomerID is not null before splitting
        if(selectedCustomerID == "001")
        {
            customerName.setText("John Silva");
        }
        else if (selectedCustomerID == "002")
        {
            customerName.setText("Sam Smith");
        }
    }//GEN-LAST:event_cust_idActionPerformed

    private void jboxmidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jboxmidActionPerformed
        // TODO add your handling code here:
        if(jboxmid.getSelectedItem() == "001")
        {
            medName.setText("Panadol");
            unitPrice.setText("25");
            unitP = 25;
        }
        else if(jboxmid.getSelectedItem() == "002")
        {
            medName.setText("Piriton");
            unitPrice.setText("50");
            unitP = 50;
        }
        else if(jboxmid.getSelectedItem() == "000")
        {
            medName.setText("");
            unitPrice.setText("");
            unitP = 0;
        }
    }//GEN-LAST:event_jboxmidActionPerformed

    private void qty1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qty1ActionPerformed
        // TODO add your handling code here:
        String TextPrice = null;
        int qty = 0;
        qty = Integer.parseInt(qty1.getText());
        if (jboxmid.getSelectedItem() == "001")
        {
            tAmount = qty*25;
            TextPrice = Integer.toString(tAmount);
        }
        else if (jboxmid.getSelectedItem() == "002")
        {
            tAmount = qty*50;
            TextPrice = Integer.toString(tAmount);
        }
        jTFUprice.setText(TextPrice);
    }//GEN-LAST:event_qty1ActionPerformed

    private void unitPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unitPriceActionPerformed

    private void jTFUpriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFUpriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFUpriceActionPerformed

    private void AddBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBtn1ActionPerformed
        //Add Button
        int custID,medID,quantity;
        double totalAmount;
        String orderDate;

        // Get customer ID from the combo box
        String selectedItem = (String) cust_id.getSelectedItem();
        String parts[] = selectedItem.split(" - ");
        custID = Integer.parseInt(parts[0]);

        //User input validation
        medID = Integer.parseInt((String) jboxmid.getSelectedItem());
        quantity = Integer.parseInt(netAmt.getText());
        //        totalAmount = Double.parseDouble(totalAmt.getText());
        totalAmount = tAmount;

        //Validating the date formatting
        SimpleDateFormat sfd = new SimpleDateFormat("yyyy-MM-dd");
        orderDate = sfd.format(date.getDate());

        //Validations of Database Interaction
        try
        {
            Statement st = pharmacy.DBconnection.createDBconnection().createStatement();

            //Fetch the next avaialable Order ID from the Database
            ResultSet rs = st.executeQuery("SELECT MAX(OrderID) FROM orders" );
            int nextOrderID = 1;

            if (rs.next())
            {
                nextOrderID =rs.getInt(1) + 1;
            }

            int count = st.executeUpdate("INSERT INTO `orders`(`OrderID`, `med_ID`, `cust_ID`, `qty`, `totalAmt` , `orderDate`) VALUES ('" + nextOrderID + "','" + medID + "', '" + custID + "', '" + quantity + "', '" + totalAmount + "','"+orderDate+"')");

            if (count > 0)
            {
                JOptionPane.showMessageDialog(null, "New Order's Details Added Successfully", "Success", JOptionPane.INFORMATION_MESSAGE);

                // Refresh the customerTable after adding the new customer
                refreshOrdersTable();
            }
        }
        //Validations of Error Handling
        catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(null, "Invalid Input for Quantity or Total Amount...!","Error",JOptionPane.ERROR_MESSAGE);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Something went wrong...!","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_AddBtn1ActionPerformed

    private void customerNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customerNameKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerNameKeyPressed

    private void customerNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customerNameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_customerNameKeyReleased

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // Back Button -> navigates to the Dashboard
        this.dispose();
        Dashboard obj = new Dashboard();
        obj.show();
    }//GEN-LAST:event_backBtnActionPerformed

    private void BackBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtn1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BackBtn1ActionPerformed

    private void BackBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtn2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BackBtn2ActionPerformed

    private void BackBtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtn3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BackBtn3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VOrderDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VOrderDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VOrderDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VOrderDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VOrderDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBtn;
    private javax.swing.JButton AddBtn1;
    private javax.swing.JButton BackBtn1;
    private javax.swing.JButton BackBtn2;
    private javax.swing.JButton BackBtn3;
    private javax.swing.JButton ClearBtn;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JButton ExitBtn;
    private javax.swing.JButton LogoutBtn;
    private javax.swing.JTable OnOrders;
    private javax.swing.JTextField SearchByTheOrderID;
    private javax.swing.JButton backBtn;
    private javax.swing.JComboBox<String> cust_id;
    private javax.swing.JTextField customerName;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JTextField id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTFUprice;
    private javax.swing.JComboBox<String> jboxmid;
    private javax.swing.JLabel medID1;
    private javax.swing.JLabel medID10;
    private javax.swing.JLabel medID4;
    private javax.swing.JLabel medID9;
    private javax.swing.JTextField medName;
    private javax.swing.JTextField netAmt;
    private javax.swing.JTable ordersTable;
    private javax.swing.JTextField qty1;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField unitPrice;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
