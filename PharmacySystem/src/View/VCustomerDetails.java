/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

/**
 *
 * @author ASUS ZENBOOK
 */
public class VCustomerDetails extends javax.swing.JFrame {

    /**
     * Creates new form VCustomerDetails
     */
    public VCustomerDetails() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        id = new javax.swing.JPanel();
        ExitBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lname = new javax.swing.JTextField();
        regID = new javax.swing.JTextField();
        contactNo = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        fname = new javax.swing.JTextField();
        AddBtn = new javax.swing.JButton();
        UpdateBtn = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        SearchBtn = new javax.swing.JButton();
        SearchByTheCustomerID = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        customerTable = new javax.swing.JTable();
        ClearBtn = new javax.swing.JButton();
        LogoutBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        cust_id = new javax.swing.JTextField();
        register = new javax.swing.JLabel();
        date = new com.toedter.calendar.JDateChooser();
        points = new javax.swing.JTextField();
        loyalpoints = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        BackBtn = new javax.swing.JButton();
        BackBtn1 = new javax.swing.JButton();
        BackBtn2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 102));

        id.setBackground(new java.awt.Color(255, 255, 255));

        ExitBtn.setBackground(new java.awt.Color(0, 153, 102));
        ExitBtn.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        ExitBtn.setText("x");
        ExitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitBtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 102));
        jLabel3.setText("Customer Details");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("First Name:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Last Name:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Registration ID:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Email:");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Contact Number:");

        regID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                regIDKeyPressed(evt);
            }
        });

        contactNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                contactNoKeyPressed(evt);
            }
        });

        AddBtn.setBackground(new java.awt.Color(102, 204, 0));
        AddBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        AddBtn.setText("Add");
        AddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBtnActionPerformed(evt);
            }
        });

        UpdateBtn.setBackground(new java.awt.Color(102, 204, 0));
        UpdateBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        UpdateBtn.setText("Update");
        UpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateBtnActionPerformed(evt);
            }
        });

        DeleteBtn.setBackground(new java.awt.Color(102, 204, 0));
        DeleteBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        DeleteBtn.setText("Delete");
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        jLabel16.setText(" Customers List");

        SearchBtn.setBackground(new java.awt.Color(102, 204, 0));
        SearchBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        SearchBtn.setText("Search");
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        SearchByTheCustomerID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SearchByTheCustomerIDKeyPressed(evt);
            }
        });

        customerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Customer ID", "First Name", "Last Name", "Reg: ID", "Email", "Contact No:", "Registered Date", "Total Loyalty Points"
            }
        ));
        customerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customerTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(customerTable);

        ClearBtn.setBackground(new java.awt.Color(102, 204, 0));
        ClearBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ClearBtn.setText("Clear");
        ClearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearBtnActionPerformed(evt);
            }
        });

        LogoutBtn.setBackground(new java.awt.Color(102, 204, 0));
        LogoutBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        LogoutBtn.setText("Logout");
        LogoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutBtnActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Customer ID:");

        cust_id.setEditable(false);

        register.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        register.setText("Registered Date:");

        points.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pointsKeyPressed(evt);
            }
        });

        loyalpoints.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        loyalpoints.setText("Initial Loyalty Points:");

        javax.swing.GroupLayout idLayout = new javax.swing.GroupLayout(id);
        id.setLayout(idLayout);
        idLayout.setHorizontalGroup(
            idLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(idLayout.createSequentialGroup()
                .addGroup(idLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(idLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(idLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(idLayout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(jLabel3)
                                .addGap(203, 203, 203)
                                .addComponent(LogoutBtn)
                                .addGap(18, 18, 18)
                                .addComponent(ExitBtn))
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addGroup(idLayout.createSequentialGroup()
                                .addGroup(idLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(register)
                                    .addComponent(loyalpoints, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(76, 76, 76)
                                .addGroup(idLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fname, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cust_id, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(regID, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(contactNo, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(points, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(idLayout.createSequentialGroup()
                        .addGroup(idLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(idLayout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1002, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(idLayout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(SearchByTheCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(SearchBtn)))
                        .addGap(0, 23, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, idLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(idLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, idLayout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(415, 415, 415))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, idLayout.createSequentialGroup()
                        .addComponent(AddBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82)
                        .addComponent(UpdateBtn)
                        .addGap(109, 109, 109)
                        .addComponent(DeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(96, 96, 96)
                        .addComponent(ClearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(191, 191, 191))))
        );
        idLayout.setVerticalGroup(
            idLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(idLayout.createSequentialGroup()
                .addGroup(idLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(idLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel3))
                    .addGroup(idLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(idLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(LogoutBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ExitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(idLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(idLayout.createSequentialGroup()
                        .addGroup(idLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cust_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(20, 20, 20)
                        .addGroup(idLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(fname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(idLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(idLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(regID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(idLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(idLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(contactNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(idLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(register)
                            .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(points, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(loyalpoints))
                .addGap(52, 52, 52)
                .addGroup(idLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ClearBtn)
                    .addComponent(DeleteBtn)
                    .addComponent(UpdateBtn)
                    .addComponent(AddBtn))
                .addGap(8, 8, 8)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(idLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchBtn)
                    .addComponent(SearchByTheCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("MediCare Pharmaceuticals");

        BackBtn.setBackground(new java.awt.Color(102, 204, 0));
        BackBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BackBtn.setText("Back");
        BackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtnActionPerformed(evt);
            }
        });

        BackBtn1.setBackground(new java.awt.Color(102, 204, 0));
        BackBtn1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BackBtn1.setText("Demo");
        BackBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtn1ActionPerformed(evt);
            }
        });

        BackBtn2.setBackground(new java.awt.Color(102, 204, 0));
        BackBtn2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BackBtn2.setText("Order Management");
        BackBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtn2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BackBtn, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(BackBtn1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(88, 88, 88))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(BackBtn2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)))
                .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BackBtn)
                .addGap(18, 18, 18)
                .addComponent(BackBtn1)
                .addGap(72, 72, 72)
                .addComponent(BackBtn2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitBtnActionPerformed
        //Exit Button
        System.exit(0);
    }//GEN-LAST:event_ExitBtnActionPerformed

    private void regIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_regIDKeyPressed
        //Ensures that the user enters only the numerical values for regID
        char c = evt.getKeyChar();

        //Validating the user inputs for the quantity
        if(Character.isLetter(c))
        {
            regID.setEditable(false);
            JOptionPane.showMessageDialog(null, "Enter Numerical Values for the Registration Number","Error",JOptionPane.ERROR_MESSAGE);
            regID.setEditable(true);

        }
    }//GEN-LAST:event_regIDKeyPressed

    private void contactNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contactNoKeyPressed
        // Ensures that the user enters only numerical values for the contact number
        char c = evt.getKeyChar();

        // Validating the user inputs for the contact number
        if (!Character.isDigit(c) || contactNo.getText().length() >= 10)
        {
            evt.consume();
            // Consume the event to prevent the input
            JOptionPane.showMessageDialog(null, "Enter up to 10 numerical values for the contact number", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_contactNoKeyPressed

    private void AddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBtnActionPerformed
        //Add Button
        String firstName,lastName,emailAddress,registeredDate;
        int registrationID,contactNumber,loyaltyPoints;

        firstName = fname.getText();
        lastName = lname.getText();
        emailAddress = email.getText();

        //User input validation
        try
        {
            registrationID = Integer.parseInt(regID.getText());
            contactNumber = Integer.parseInt(contactNo.getText());
            loyaltyPoints = Integer.parseInt(points.getText());
        }catch(NumberFormatException ex)
        {
            JOptionPane.showMessageDialog(null, "Invalid input!","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        //Validating the date formatting
        SimpleDateFormat sfd = new SimpleDateFormat("yyyy-MM-dd");
        registeredDate = sfd.format(date.getDate());

        //Validations of Database Interaction
        try
        {
            Statement st = pharmacy.DBconnection.createDBconnection().createStatement();

            //Fetch the next avaialable Customer ID from the Database
            ResultSet rs = st.executeQuery("SELECT MAX(cust_ID) FROM doctor" );
            int nextCustID = 1;

            if (rs.next())
            {
                nextCustID =rs.getInt(1) + 1;
            }

            int count = st.executeUpdate("INSERT INTO `doctor`(`cust_ID`, `f_name`,`l_name`,`doc_regID`, `email`,`phone_no`,`reg_date`,`loyalty_points`) VALUES ('" + nextCustID + "','" + firstName + "', '" + lastName + "', '" + registrationID + "', '" + emailAddress + "','" + contactNumber + "', '"+ registeredDate +"', '"+ loyaltyPoints +"')");

            if (count > 0)
            {
                JOptionPane.showMessageDialog(null, "New Customer's Details Added Successfully", "Success", JOptionPane.INFORMATION_MESSAGE);

                // Refresh the customerTable after adding the new customer
                refreshCustomerTable();
            }
        }
        //Validations of Error Handling
        catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(null, "Invalid Input for Registration ID / Contact Number / Quantity /Price Or Total Amount...!","Error",JOptionPane.ERROR_MESSAGE);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Something went wrong...!","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_AddBtnActionPerformed

    private void UpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateBtnActionPerformed
        // Update Button
        try
        {
            String firstName,lastName,emailAddress,registeredDate;
            int registrationID,contactNumber;

            firstName = fname.getText();
            lastName = lname.getText();
            emailAddress = email.getText();

            //Validating the date formatting
            SimpleDateFormat sfd = new SimpleDateFormat("yyyy-MM-dd");
            registeredDate = sfd.format(date.getDate());

            //User input validation
            registrationID = Integer.parseInt(regID.getText());
            contactNumber = Integer.parseInt(contactNo.getText());

            //Validations of Database Interaction
            try
            {
                Statement st = pharmacy.DBconnection.createDBconnection().createStatement();
                int x = Integer.parseInt(cust_id.getText());

                //Validations related to SQL
                String query = "UPDATE doctor SET f_name = ? , l_name = ? , doc_regID = ? , email = ? , phone_no = ? ,reg_date = ? WHERE cust_ID = ?";

                // Use PreparedStatement to avoid SQL injection
                java.sql.PreparedStatement prepSt = st.getConnection().prepareStatement(query);

                prepSt.setString(1, firstName);
                prepSt.setString(2, lastName);
                prepSt.setInt(3, registrationID);
                prepSt.setString(4, emailAddress);
                prepSt.setInt(5, contactNumber);

                // Assuming pickupDate is a LocalDate
                prepSt.setString(6, registeredDate);
                prepSt.setInt(11, x);

                int count = prepSt.executeUpdate();

                if (count > 0)
                {
                    JOptionPane.showMessageDialog(null, "Selected Customer Details Updated Successfully", "Success",JOptionPane.INFORMATION_MESSAGE);

                    // Refresh the Customer Table after updating
                    refreshCustomerTable();
                }
            }
            catch(Exception e)
            {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error occurred while Updating the selected customer's details", "Error", JOptionPane.ERROR_MESSAGE);
            }

        }
        catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(null, "Invalid Input for Registration ID / Contact Number / Quantity /Price Or Total Amount...!", "Error", JOptionPane.ERROR_MESSAGE);
        }
        catch(Exception e)
        {
            //Generic Exception for any kind of exception
        }
    }//GEN-LAST:event_UpdateBtnActionPerformed

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed
        //Delete Button
        try
        {
            Statement st = pharmacy.DBconnection.createDBconnection().createStatement();
            String query = " DELETE FROM `doctor` WHERE `cust_ID` = " + Integer.parseInt(customerTable.getValueAt(customerTable.getSelectedRow(), 0).toString());

            //executeUpdate Method call to execute the DELETE query & returns the No of rows deleted
            int count = st.executeUpdate(query);
            //System.out.println(query);

            //Data Validations
            if (count > 0)
            {
                JOptionPane.showMessageDialog(null, "Selected Customer's Details deleted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);

                // Refresh the customerTable after deleting
                refreshCustomerTable();
            }

            //Deselect previous selected rows
            customerTable.clearSelection();
            refreshCustomerTable();
        }
        catch (Exception e)
        {

        }
    }//GEN-LAST:event_DeleteBtnActionPerformed

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        /*
        try
        {
            // Creating the Database connection
            Statement st = DBconnection.createDBconnection().createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM doctor WHERE cust_ID = '"+SearchByTheCustomerID.getText()+"'");

            if(rs.next())
            {
                fname.setText(rs.getString("f_name"));
                lname.setText(rs.getString("l_name"));
                regID.setText(rs.getString("doc_regID"));
                email.setText(rs.getString("email"));
                contactNo.setText(rs.getString("phone_no"));
                medicine.setText(rs.getString("drug"));
                price.setText(rs.getString("price"));
                qty.setText(rs.getString("qty"));
                totalAmt.setText(rs.getString("total"));

                String pickupDate = rs.getString("pickup_date");
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

                try
                {
                    Date pickup_Date = sdf.parse(pickupDate);
                    date.setDate(pickup_Date);
                }
                catch (ParseException ex)
                {
                    // Handle the parsing exception
                    ex.printStackTrace();
                }
            }
        }
        catch(Exception e)
        {

        }
        */
    }//GEN-LAST:event_SearchBtnActionPerformed

    private void SearchByTheCustomerIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchByTheCustomerIDKeyPressed
        //Ensures the user enters only the numerical values for the cust_id
        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            evt.consume();
            // Consume the event to prevent the character from being entered
            JOptionPane.showMessageDialog(null, "You must enter numerical values for Customer ID...!", "Error", JOptionPane.ERROR_MESSAGE);
        }

        super.processKeyEvent(evt);
    }//GEN-LAST:event_SearchByTheCustomerIDKeyPressed

    private void customerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerTableMouseClicked
        //Get the index of the selected row
        int selectedRow = customerTable.getSelectedRow();

        //Establish the table model that represents the structure & data of the table
        TableModel model = customerTable.getModel();

        //Validationa to ensure that User interacts with the selected row data
        //Set the First Name,Last Name,Registration No,Email,Phone number,Medicine name,Price,Quantity,Total Amount & Pickup Date text fields to the value from the selected row
        fname.setText(model.getValueAt(selectedRow, 1).toString());
        lname.setText(model.getValueAt(selectedRow,2).toString());
        regID.setText(model.getValueAt(selectedRow, 3).toString());
        email.setText(model.getValueAt(selectedRow, 4).toString());
        contactNo.setText(model.getValueAt(selectedRow, 5).toString());

        //Retrieve the data from the First Column(index 0)of the selected row & store it in cust_ID
        cust_id.setText(model.getValueAt(selectedRow, 0).toString());

        //Set the Date Format
        SimpleDateFormat sfd = new SimpleDateFormat("yyyy-MM-dd");
        String pickupDate = (String) model.getValueAt(selectedRow, 10);

        try
        {
            //Handle the parsing of the Pickup Date
            Date pickup_Date = sfd.parse(pickupDate);
            date.setDate(pickup_Date);
        }
        catch (ParseException e)
        {
            // Handle the parsing exception,by displaying an error message.
            e.printStackTrace();
        }
    }//GEN-LAST:event_customerTableMouseClicked

    private void ClearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearBtnActionPerformed
        // Clear Button
        cust_id.setText("Will Be Added Automatically");
        fname.setText("");
        lname.setText("");
        regID.setText("");
        email.setText("@gmail.com");
        contactNo.setText("");
        date.setDate(Date.from(Instant.now()));
        loyalpoints.setText("1");
    }//GEN-LAST:event_ClearBtnActionPerformed

    private void LogoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutBtnActionPerformed
        //Logout Button
        this.dispose();
        Loginform obj = new Loginform();
        obj.show();
    }//GEN-LAST:event_LogoutBtnActionPerformed

    private void pointsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pointsKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_pointsKeyPressed

    private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtnActionPerformed
        // Back Button -> navigates to the Dashboard
        this.dispose();
        Dashboard obj = new Dashboard();
        obj.show();
    }//GEN-LAST:event_BackBtnActionPerformed

    private void BackBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtn1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BackBtn1ActionPerformed

    private void BackBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtn2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BackBtn2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VCustomerDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VCustomerDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VCustomerDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VCustomerDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VCustomerDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBtn;
    private javax.swing.JButton BackBtn;
    private javax.swing.JButton BackBtn1;
    private javax.swing.JButton BackBtn2;
    private javax.swing.JButton ClearBtn;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JButton ExitBtn;
    private javax.swing.JButton LogoutBtn;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JTextField SearchByTheCustomerID;
    private javax.swing.JButton UpdateBtn;
    private javax.swing.JTextField contactNo;
    private javax.swing.JTextField cust_id;
    private javax.swing.JTable customerTable;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JTextField email;
    private javax.swing.JTextField fname;
    private javax.swing.JPanel id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lname;
    private javax.swing.JLabel loyalpoints;
    private javax.swing.JTextField points;
    private javax.swing.JTextField regID;
    private javax.swing.JLabel register;
    // End of variables declaration//GEN-END:variables
}
